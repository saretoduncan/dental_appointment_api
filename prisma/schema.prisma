// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AccessLevel {
  id           String @id @default(cuid())
  access_level String @unique
  users        User[]
}

model User {
  id                 String        @id @default(cuid())
  user_name          String        @unique
  password           String
  profile            UserProfile?
  access_levels      AccessLevel[]
  appointmentsBooked Appointment[]
  createdAt          DateTime      @default(now())
  updateAt           DateTime      @updatedAt
}

model UserProfile {
  id             String      @id @default(cuid())
  first_name     String
  middle_name    String?
  last_name      String
  email          String      @unique
  phone_number   String      @unique
  work_email     String      @unique
  national_id_no String      @unique
  role           String
  user           User        @relation(fields: [user_id], references: [id])
  user_id        String      @unique
  next_of_keen   NextOfKeen?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model NextOfKeen {
  id           String      @id @default(cuid())
  first_name   String
  last_Name    String
  email        String?
  phoneNumber  String
  relationship String
  userProfile  UserProfile @relation(fields: [profile_id], references: [id])
  profile_id      String      @unique
  createdAt    DateTime    @default(now())
  updateAt     DateTime    @updatedAt
}

model Patient {
  id                    String        @id @default(cuid())
  first_name            String
  middle_name           String?
  last_name             String
  email                 String?
  phone_number          String?
  residence             String
  date_of_birth         DateTime
  guardian_name         String?
  guardian_number       String?
  guardian_relationship String?
  appointments          Appointment[]
  createdAt             DateTime      @default(now())
  updateAt              DateTime      @updatedAt
}

model Appointment {
  id           String   @id @default(cuid())
  treatement   String?
  appointment  DateTime
  patient      Patient  @relation(fields: [patient_id], references: [id])
  patient_id   String
  booked_by    User     @relation(fields: [booked_by_id], references: [id])
  booked_by_id String
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt
}
